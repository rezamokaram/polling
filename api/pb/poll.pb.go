// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: poll.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreatePollRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Options       []string               `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
	Tags          []string               `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePollRequest) Reset() {
	*x = CreatePollRequest{}
	mi := &file_poll_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePollRequest) ProtoMessage() {}

func (x *CreatePollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_poll_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePollRequest.ProtoReflect.Descriptor instead.
func (*CreatePollRequest) Descriptor() ([]byte, []int) {
	return file_poll_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePollRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreatePollRequest) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *CreatePollRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type PollListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=userId,json=title,proto3" json:"userId,omitempty"`
	Tag           string                 `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	Page          uint32                 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit         uint32                 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PollListRequest) Reset() {
	*x = PollListRequest{}
	mi := &file_poll_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollListRequest) ProtoMessage() {}

func (x *PollListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_poll_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollListRequest.ProtoReflect.Descriptor instead.
func (*PollListRequest) Descriptor() ([]byte, []int) {
	return file_poll_proto_rawDescGZIP(), []int{1}
}

func (x *PollListRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PollListRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *PollListRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PollListRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type PollListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Polls         []*Poll                `protobuf:"bytes,1,rep,name=polls,proto3" json:"polls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PollListResponse) Reset() {
	*x = PollListResponse{}
	mi := &file_poll_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollListResponse) ProtoMessage() {}

func (x *PollListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_poll_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollListResponse.ProtoReflect.Descriptor instead.
func (*PollListResponse) Descriptor() ([]byte, []int) {
	return file_poll_proto_rawDescGZIP(), []int{2}
}

func (x *PollListResponse) GetPolls() []*Poll {
	if x != nil {
		return x.Polls
	}
	return nil
}

type Poll struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Options       []string               `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
	Tags          []string               `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt     int64                  `protobuf:"varint,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Poll) Reset() {
	*x = Poll{}
	mi := &file_poll_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Poll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Poll) ProtoMessage() {}

func (x *Poll) ProtoReflect() protoreflect.Message {
	mi := &file_poll_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Poll.ProtoReflect.Descriptor instead.
func (*Poll) Descriptor() ([]byte, []int) {
	return file_poll_proto_rawDescGZIP(), []int{3}
}

func (x *Poll) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Poll) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Poll) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Poll) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Poll) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Poll) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

var File_poll_proto protoreflect.FileDescriptor

const file_poll_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"poll.proto\"W\n" +
	"\x11CreatePollRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x18\n" +
	"\aoptions\x18\x02 \x03(\tR\aoptions\x12\x12\n" +
	"\x04tags\x18\x03 \x03(\tR\x04tags\"d\n" +
	"\x0fPollListRequest\x12\x15\n" +
	"\x06userId\x18\x01 \x01(\rR\x05title\x12\x10\n" +
	"\x03tag\x18\x02 \x01(\tR\x03tag\x12\x12\n" +
	"\x04page\x18\x03 \x01(\rR\x04page\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\rR\x05limit\"/\n" +
	"\x10PollListResponse\x12\x1b\n" +
	"\x05polls\x18\x01 \x03(\v2\x05.PollR\x05polls\"\x96\x01\n" +
	"\x04Poll\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\aoptions\x18\x03 \x03(\tR\aoptions\x12\x12\n" +
	"\x04tags\x18\x04 \x03(\tR\x04tags\x12\x1c\n" +
	"\tcreatedAt\x18\x05 \x01(\x03R\tcreatedAt\x12\x1c\n" +
	"\tupdatedAt\x18\x06 \x01(\x03R\tupdatedAtB\x10Z\x0epolling/api/pbb\x06proto3"

var (
	file_poll_proto_rawDescOnce sync.Once
	file_poll_proto_rawDescData []byte
)

func file_poll_proto_rawDescGZIP() []byte {
	file_poll_proto_rawDescOnce.Do(func() {
		file_poll_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_poll_proto_rawDesc), len(file_poll_proto_rawDesc)))
	})
	return file_poll_proto_rawDescData
}

var file_poll_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_poll_proto_goTypes = []any{
	(*CreatePollRequest)(nil), // 0: CreatePollRequest
	(*PollListRequest)(nil),   // 1: PollListRequest
	(*PollListResponse)(nil),  // 2: PollListResponse
	(*Poll)(nil),              // 3: Poll
}
var file_poll_proto_depIdxs = []int32{
	3, // 0: PollListResponse.polls:type_name -> Poll
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_poll_proto_init() }
func file_poll_proto_init() {
	if File_poll_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_poll_proto_rawDesc), len(file_poll_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_poll_proto_goTypes,
		DependencyIndexes: file_poll_proto_depIdxs,
		MessageInfos:      file_poll_proto_msgTypes,
	}.Build()
	File_poll_proto = out.File
	file_poll_proto_goTypes = nil
	file_poll_proto_depIdxs = nil
}
